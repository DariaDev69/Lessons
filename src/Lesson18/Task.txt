Массивы - это объект, который хранит коллекцию значений определенного единого типа данных, а также коллекцией массива могут быть другие массивы.
Длина массива после инициализации остается неизменной, но каждый элемент массива можно изменить.

int [] array1 = {1,5,0,-2,5};
array1[1] = 10; - означает замену элемента под индексом 1 с 5 на 10.
System.out.println(array2[0]); - означает вывод на экран элемент под индексом 0 из массива array2.
int [] [] array3 = {{0,1,5},{-7,3,3},{5,-1,2}}; - создание двумерного массива, т.е. элементами этого массива являются другие одномерные массивы.
!!!Двумерный массив имеет двойную индексацию, например, array3[0][1] = 1;!!!

Виды массивов:
1. Хранит коллекцию примитивных типов данных (хранит сами переменные).
2. Хранит коллекцию ссылочных типов данных (хранит ссылки на объекты).

JVM не ограничивает "мерность" массивов, но надо помнить, что, например, элементами 5-тимерного массива являются 4-хмерные массивы, а 4-хмерного 3-хмерные и т.д.

Этапы создания массива:
1. Декларация (объявление) - создается массив, который ссылается на null, т.е. массив пока не ссылается ни на какой объект.
При создании массива нельзя сразу указать его длину.
2. Размещение в памяти - выделение памяти для элементов массива. На данном этапе уже нужно обозначить длину массива, которая всегда int.
Сами элементы массива на этом этапе принимают свои дефолтные значения.
3. Инициализация:
    3.1. Статическая
    3.2. Динамическая

Смешанные варианты создания массива:
1. int [] array3 = new int [3]; - объединенный этап декларации и размещения в памяти.
2. int [] array2 = {1,2,3}; - все три шага (декларация, размещение в памяти и инициализация) объеденены в один.
3. int [] array1; - сначала мы задекларировали (т.е. объявили массив).
   array1 = new int [] {1,2,3}; - затем придали ему значение, сразу обозначив его длину.

ВОТ КАК ПИСАТЬ НЕЛЬЗЯ:
1. int [] array1;
   array1 = {1,2,3};
2. int [] array4 = new int [3] {1,2,3};