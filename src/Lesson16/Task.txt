Всё о классе String.

Объявление / создание объектов класса String.

String самый распространенный класс в Java.
Он находится в пакете java.lang, данный пакет по умолчанию импортируется в каждый класс из-за его частого использования.

Объявление и создание объектов класса String:

1. Как и любой объект можно создать через конструктор new ().
При этом идёт создание именного нового объекта класса String.

2. Без использования конструктора String s2 = "Hello". Но в данном случае нет гарантии на создание нового объекта, так как первоначально jvm проверяет,
нет ли данного объекта в String pool, только в случае отсутствия создает новый объект и записывает его значение в String pool.
Новый объект создаётся только если его нет в String pool.

3. System.out.println ("Hello!").
Но в данном случае нет гарантии на создание нового объекта, так как первоначально jvm проверяет,
нет ли данного объекта в String pool, только в случае отсутствия создает новый объект и записывает его значение в String pool.
Новый объект создаётся только если его нет в String pool.

Массив - array, это объект, который представляет собой коллекцию каких-либо значений.
{0,5,-3,19,6} - это массив типа данных int, в массиве не могут быть использованы разные типы данных.
У элементов массива есть само значение этого элемента и индекс элемента, т.е. его положение в массиве, индекс в массиве всегда начинается с 0.

String is immutable.
Т.е. неизменный, если мы написали String s = "Privet"; , то вот это "Privet" никак не может быть изменено.
Это достигается с помощью 3-х факторов:
1. String хранит свое значение в private массиве (из-за того, что он приватный, он виден только внутри класса String), к тому же массив имеет фиксированную длину.
2. String хранит свое значение в final массиве (т.е. его инициализация мб только 1 раз).
3. Ни один из методов класса String не изменяет индивидуальные элементы массива типа char.

Методы класса String.

1. length() -> in - метод никаких параметров не принимает, возвращает тип данных int и помогает найти нам длину.
2. charAt(int index) -> char - (В переводе СИМВОЛ НА (значение индекса в параметрах)) - т.е. можно определить какой символ находится в массиве на определенном индексе.
