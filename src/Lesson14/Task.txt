Циклы.

1. For (regular FOR)
2. While
3. Do...while
4. Foreach

Сегодня рассматривается цикл for.

Синтаксис:

for (initialization (инициализация (локальная переменная!)); condition (условие boolean); update (изменения)) {
    expressions (наш код, который будет повторятся какое-либо количество раз);
    }

For используется когда заранее известно, сколько раз нужны сделать какое-либо действие.
Это цикл со счетчиком.

1й этап. Инициализация выполняется 1 раз при самом 1м запуске цикла.
При этом этот этап можно пропускать, но тогда мы обязаны инициализировать переменную ранее.
Переменные инициализированные внутри первого этапа цикла являются локальными и их мб несколько, но они дб одного типа.

2й этап. Проверка условия. Цикл пойдёт на выполнение только при true. Здесь могут быть использованы все логические операторы,
объединяющие несколько boolean-выражений.
Условие также может отсутствовать, но его отсутствие всегда означает true и цикл будет отправлен на выполнение, и цикл также становится бесконечным.

3й этап. Если условие было true и итерация выполнена, то в конце заключительный этап - обновление (обычно переменной, объявленной на 1м этапе).
На этом этапе можно также не только обновлять переменную, но и вызвать метод (это делается не часто, написано тут для примера).
Также этот этап можно не прописать в параметрах цикла, а вывести в конце тела цикла.
Если это обновление будет отсутствовать - цикл будет бесконечным.

Unreachable statement - условия, которые никогда не выполняются, Java не позволяет писать в коде такие выражения.

Loop statement:
Break. Позволяет моментально выйти из цикла.
Continue. Позволяет продолжить цикл без какой-либо итерации.

Nested loop - когда в теле одного цикла используется другой цикл.

Циклам можно давать названия. Обычно это используется для управления внешними циклами во внутренних.